digraph "edgeToCutDir"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="edgeToCutDir",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Foam::abort",height=0.2,width=0.4,color="red",URL="$a10974.html#a447107a607d03e417307c203fa5fb44b"];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="cutDirToEdge",height=0.2,width=0.4,color="red",URL="$a11030.html#acb1ef179f7ae2dfef897c39ce019e712",tooltip="Reverse of edgeToCutDir: given direction find edge bundle and. "];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="Foam::isA",height=0.2,width=0.4,color="black",URL="$a10974.html#a7f38c7df863d37f5357047d27dab7711",tooltip="Check if a dynamic_cast to typeid is possible. "];
  Node3 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 -> Node1 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="Foam::mag",height=0.2,width=0.4,color="black",URL="$a10974.html#a929da2a3fdcf3dacbbe0487d3a330dae"];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="Foam::primitiveMesh\l::edges",height=0.2,width=0.4,color="black",URL="$a02008.html#aae82d34fe433288eb6b1f9dea53675c8",tooltip="Return mesh edges. Uses calcEdges. "];
  Node1 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="Foam::UList::end",height=0.2,width=0.4,color="black",URL="$a02831.html#acf5102a998ffca93da588563e2af7413",tooltip="Return an iterator to end traversing the UList. "];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="normEdgeVec",height=0.2,width=0.4,color="red",URL="$a11030.html#a7fcaaaefc5bc2d460742d9a452091d8b",tooltip="Normalized edge vector. "];
  Node8 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="otherFace",height=0.2,width=0.4,color="red",URL="$a11030.html#acca957db1c76da23620cfb99c90b2878",tooltip="Return face on cell using edgeI but not facei. Throws error. "];
  Node1 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="walkFace",height=0.2,width=0.4,color="red",URL="$a11030.html#a538eb82d4f1ee40b87c12fb6409cb0d1",tooltip="Returns label of edge nEdges away from startEdge (in the direction. "];
  Node10 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
