digraph "operator=="
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="operator==",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Foam::epsilonWallFunction\lFvPatchScalarField::epsilonWall\lFunctionFvPatchScalarField",height=0.2,width=0.4,color="black",URL="$a00661.html#a82aded9843475070853e25b4d3109872",tooltip="Construct from patch, internal field and dictionary. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="gradientBoundaryCoeffs",height=0.2,width=0.4,color="black",URL="$a00886.html#ab2f14e2ad5cce5ef7b2e2a9b82da075e",tooltip="Return the matrix source coefficients corresponding to the. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="Foam::omegaWallFunctionFv\lPatchScalarField::omegaWallFunction\lFvPatchScalarField",height=0.2,width=0.4,color="black",URL="$a01708.html#ada7b2c53a2f3c6a4823b40ca462403eb",tooltip="Construct from patch, internal field and dictionary. "];
}
