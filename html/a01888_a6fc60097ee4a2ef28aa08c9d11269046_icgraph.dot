digraph "distance"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="distance",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Foam::booleanSurface\l::booleanSurface",height=0.2,width=0.4,color="black",URL="$a00150.html#af9badecab2d5cf9894182caa82611921",tooltip="Construct from surfaces and operation. Surfaces need to be closed. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="Foam::triSurfaceTools\l::calcInterpolationWeights",height=0.2,width=0.4,color="black",URL="$a02699.html#ade9d956c25580111acb203715d242ca3"];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="Foam::mappedPatchBase\l::facePoint",height=0.2,width=0.4,color="red",URL="$a01424.html#ae44e759f2387683eacab8a3099f477c7",tooltip="Get a point on the face given a face decomposition method: "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="Foam::treeDataPrimitivePatch\l::findIntersection",height=0.2,width=0.4,color="red",URL="$a02682.html#a3cafe824b5c7e74114578586cbbf421e",tooltip="Helper: find intersection of line with shapes. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="Foam::dynamicTreeDataPoint\l::findNearest",height=0.2,width=0.4,color="black",URL="$a00608.html#a7ebb53d83ad9d2d3558a657b46ad1ee9",tooltip="Calculates nearest (to line) point in shape. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="Foam::meshSearch::findNearest\lBoundaryFace",height=0.2,width=0.4,color="red",URL="$a01474.html#aae94dae06cef275ce7518d882fc4c4a7",tooltip="Find nearest boundary face. "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="Foam::cellPointWeight\l::findTetrahedron",height=0.2,width=0.4,color="black",URL="$a00225.html#aecec3ccb37ced505c339363e0803800a"];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Foam::cellPointWeight\l::findTriangle",height=0.2,width=0.4,color="black",URL="$a00225.html#a58a370be784ce48f88d340ab2ab15ac8"];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="Foam::face::intersection",height=0.2,width=0.4,color="black",URL="$a00716.html#a7fc4530719ef5666e372be1b8b856d9a",tooltip="Fast intersection with a ray. "];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="Foam::face::ray",height=0.2,width=0.4,color="red",URL="$a00716.html#ac68371e675a335c343dfa54b1dbf662d",tooltip="Return potential intersection with face with a ray starting. "];
  Node11 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="Foam::treeDataCell\l::findIntersectOp::operator()",height=0.2,width=0.4,color="black",URL="$a00803.html#a43d47b209c41bbb1717f33bc766cd2c0"];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="Foam::slidingInterface\l::modifyMotionPoints",height=0.2,width=0.4,color="red",URL="$a02345.html#a4a962b56dd7cf30972c468258fa888e5",tooltip="Modify motion points to comply with the topological change. "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="Foam::line::nearestDist",height=0.2,width=0.4,color="black",URL="$a01332.html#af27db862757603661ed962cee74dfbdf",tooltip="Return nearest distance from line to line. Returns distance. "];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="Foam::triangle::nearestPoint",height=0.2,width=0.4,color="black",URL="$a02685.html#a422f024721942d5e5195c68116fb29ea",tooltip="Return nearest point to line on triangle. Returns hit if. "];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="Foam::tetrahedron::\lnearestPoint",height=0.2,width=0.4,color="red",URL="$a02581.html#ad2a728428db89fbe441f66a06ebfca16",tooltip="Return nearest point to p on tetrahedron. Is p itself. "];
  Node16 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="Foam::face::nearestPoint\lClassify",height=0.2,width=0.4,color="red",URL="$a00716.html#a4b69c61851aca1928f953b2bc359578d",tooltip="Return nearest point to face and classify it: "];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="Foam::nearestEqOp::\loperator()",height=0.2,width=0.4,color="black",URL="$a01579.html#aca31c134b06f127a240af78f11932306"];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="Foam::treeDataPoint\l::findNearestOp::operator()",height=0.2,width=0.4,color="black",URL="$a00811.html#a6e06b4c7a57cb7eceef7264446dd78b1"];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="Foam::treeDataEdge\l::findNearestOp::operator()",height=0.2,width=0.4,color="black",URL="$a00809.html#a729f81361ac2cf97bbda7e0282e7e8cb"];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="Foam::treeDataPrimitivePatch\l::findNearestOp::operator()",height=0.2,width=0.4,color="black",URL="$a00812.html#a729f81361ac2cf97bbda7e0282e7e8cb"];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="Foam::treeDataFace\l::findNearestOp::operator()",height=0.2,width=0.4,color="black",URL="$a00810.html#a729f81361ac2cf97bbda7e0282e7e8cb"];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="Foam::treeDataFace\l::findIntersectOp::operator()",height=0.2,width=0.4,color="black",URL="$a00805.html#a43d47b209c41bbb1717f33bc766cd2c0",tooltip="Calculate intersection of triangle with ray. Sets result. "];
  Node1 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="Foam::pointHitSort\l::operator\<",height=0.2,width=0.4,color="black",URL="$a01889.html#a208d34f26273679d260e651981a7ccd1"];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="Foam::pointHitSort\l::operator==",height=0.2,width=0.4,color="black",URL="$a01889.html#a763e4a00d5fcd75ef6cc2ce0cb0000f0"];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="Foam::orientedSurface\l::orient",height=0.2,width=0.4,color="red",URL="$a01728.html#a24de2700bb5da99aae8a5676746c058b",tooltip="Flip faces such that normals are consistent with point: "];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="Foam::treeDataEdge\l::overlaps",height=0.2,width=0.4,color="black",URL="$a02679.html#a86647aa40ed3ca913e0c2f4a308dc3f0",tooltip="Does (bb of) shape at index overlap bb. "];
  Node1 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="Foam::treeDataPrimitivePatch\l::overlaps",height=0.2,width=0.4,color="black",URL="$a02682.html#a86647aa40ed3ca913e0c2f4a308dc3f0",tooltip="Does shape at index overlap sphere. "];
  Node1 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="Foam::PrimitivePatch\l::projectFaceCentres",height=0.2,width=0.4,color="black",URL="$a01977.html#a5e3e4627998339f72601df5ab328e707"];
  Node1 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="Foam::PrimitivePatch\l::projectPoints",height=0.2,width=0.4,color="black",URL="$a01977.html#ac673d3057b4967a0e7f49902c9a3078e"];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="Foam::cellDistFuncs\l::smallestDist",height=0.2,width=0.4,color="red",URL="$a00213.html#a88216441192595feb32d2e7f9399e663",tooltip="Calculate smallest true distance (and face index) "];
}
