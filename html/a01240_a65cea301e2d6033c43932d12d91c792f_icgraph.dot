digraph "size"
{
  bgcolor="transparent";
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="size",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 [label="Foam::pairGAMGAgglomeration\l::agglomerate",height=0.2,width=0.4,color="black",URL="$a01713.html#a70a79dc9e89583565e07c680157e7823",tooltip="Calculate and return agglomeration. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 [label="Foam::GAMGAgglomeration\l::agglomerateLduAddressing",height=0.2,width=0.4,color="black",URL="$a00871.html#a1f8676d38e3715d5330beb58b7883c90",tooltip="Assemble coarse mesh addressing. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node4 [label="Foam::GAMGAgglomeration\l::checkRestriction",height=0.2,width=0.4,color="black",URL="$a00871.html#ac6f2eee543459c0116f73cbde0b7b146",tooltip="Given restriction determines if coarse cells are connected. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node5 [label="Foam::GAMGAgglomeration\l::compactLevels",height=0.2,width=0.4,color="black",URL="$a00871.html#a7aa50f494f31bbb03ef092eeedd906e0",tooltip="Shrink the number of levels to that specified. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node6 [label="Foam::dummyAgglomeration\l::dummyAgglomeration",height=0.2,width=0.4,color="black",URL="$a00567.html#a1b5be175500d32caaf792483977e8d74",tooltip="Construct given mesh and controls. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node7 [label="Foam::lduPrimitiveMesh\l::gather",height=0.2,width=0.4,color="black",URL="$a01248.html#ad7514c3eec68fa18c472b5dfe1c2b5a4",tooltip="Gather meshes from other processors onto procIDs[0]. "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node8 [label="Foam::GAMGProcAgglomeration\l::globalCellCells",height=0.2,width=0.4,color="black",URL="$a00875.html#a59b7daeb97bb6479a59cdeacff965dc5",tooltip="Debug: calculate global cell-cells. "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node9 [label="Foam::lduPrimitiveMesh\l::lduPrimitiveMesh",height=0.2,width=0.4,color="black",URL="$a01248.html#aeae1eb8af27cafdc116980dd48968d19",tooltip="Construct by combining multiple meshes. The meshes come from. "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node10 [label="Foam::LUscalarMatrix\l::LUscalarMatrix",height=0.2,width=0.4,color="black",URL="$a01349.html#aebab11f1a492c2f8e5e99c3e138253ce",tooltip="Construct from lduMatrix and perform LU decomposition. "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node11 [label="Foam::MGridGenGAMGAgglomeration\l::MGridGenGAMGAgglomeration",height=0.2,width=0.4,color="black",URL="$a01441.html#ad90d6181883d17cf991ff0cde7243627",tooltip="Construct given mesh and controls. "];
}
