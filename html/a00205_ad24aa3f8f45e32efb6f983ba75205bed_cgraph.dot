digraph "sumPatchSize"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="sumPatchSize",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Foam::polyMesh::boundaryMesh",height=0.2,width=0.4,color="black",URL="$a01957.html#a6b7f5ba89250dbd7a1c6c7860ab60fe3",tooltip="Return boundary mesh. "];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="correctBoundaryFaceCells",height=0.2,width=0.4,color="red",URL="$a00205.html#a5198bdca2e34eb1b084a525b90740576",tooltip="Correct all cells connected to boundary (via face). Sets values in. "];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="mesh",height=0.2,width=0.4,color="red",URL="$a00205.html#aa51573bc757d5d5bb058db0464886447",tooltip="Access mesh. "];
  Node4 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node1 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="Foam::HashTable::found",height=0.2,width=0.4,color="red",URL="$a00997.html#a3df8044b3c7afb4eb62517f64e85eab6",tooltip="Return true if hashedEntry is found in table. "];
  Node3 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="Foam::sum",height=0.2,width=0.4,color="black",URL="$a10893.html#a3d8733143aad0e03b300186ab4bef137"];
}
