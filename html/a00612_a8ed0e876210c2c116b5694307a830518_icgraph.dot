digraph "end"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="end",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Foam::edgeSurface::\laddIntersectionEdges",height=0.2,width=0.4,color="black",URL="$a00621.html#aa26839701e0cd28a34fefc83a9ad6a78",tooltip="Add intersection edges to a face. Used for connecting. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="Foam::PatchTools::checkOrientation",height=0.2,width=0.4,color="red",URL="$a01814.html#a20f23e9ffe1102dccd75986b5435aef7",tooltip="Check for orientation issues. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="Foam::PrimitivePatch\l::checkTopology",height=0.2,width=0.4,color="black",URL="$a01970.html#a0579e0d0a6156734bbeb72cfd7a94c9d",tooltip="Check surface formed by patch for manifoldness (see above). "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="Foam::triSurfaceTools\l::collapseEdges",height=0.2,width=0.4,color="black",URL="$a02689.html#a3aee046d49916c8984f42f5710679e3f",tooltip="Create new triSurface by collapsing edges to edge mids. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="commonVertex",height=0.2,width=0.4,color="red",URL="$a00612.html#aa2b6e905a6dbfa5a860c842efbcf4d9e",tooltip="Return common vertex. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="Foam::curvedEdge::compare",height=0.2,width=0.4,color="black",URL="$a00448.html#a2d47f7bde63c18e31289888f0c35c205",tooltip="Compare the given start and end points with this curve. "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="Foam::edgeVertex::coord",height=0.2,width=0.4,color="red",URL="$a00622.html#a272d10ee27ddbd3a20bccfc71015fb18",tooltip="Return coordinate of cut (uses weight if edgeCut) "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Foam::twoDPointCorrector\l::correctDisplacement",height=0.2,width=0.4,color="red",URL="$a02707.html#a26b46ed22455249a17fd5ec9d066ca97",tooltip="Correct motion displacements. "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="Foam::particle::crossEdge\lConnectedFace",height=0.2,width=0.4,color="red",URL="$a01774.html#ae442e1bec92480b4f50c527b934edddb",tooltip="Cross the from the given face across the given edge of the. "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="Foam::geomCellLooper::cut",height=0.2,width=0.4,color="black",URL="$a00917.html#ae441aaf74ea7c5d77ba3bd7ddfcb919b",tooltip="Same but now also base point of cut provided (instead of always. "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="Foam::triFace::edgeDirection",height=0.2,width=0.4,color="black",URL="$a02677.html#aa85ab892a55ced3ba45f472a7a96e417",tooltip="Return the edge direction on the face. "];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="Foam::face::edgeDirection",height=0.2,width=0.4,color="red",URL="$a00715.html#aa85ab892a55ced3ba45f472a7a96e417",tooltip="Return the edge direction on the face. "];
  Node13 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="Foam::extendedEdgeMesh\l::edgeDirection",height=0.2,width=0.4,color="black",URL="$a00700.html#a73ecaff1c0db11a69986cae5b295b84f",tooltip="Return the direction of edgeI, pointing away from ptI. "];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="Foam::edgeSurface::\ledgeSurface",height=0.2,width=0.4,color="black",URL="$a00621.html#abe6268d682c2dab294acf2175f47ca38",tooltip="Construct from surface and intersection description. "];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="Foam::directionInfo\l::edgeToFaceIndex",height=0.2,width=0.4,color="black",URL="$a00542.html#ae91026257717a2d46454adf53e72da4d",tooltip="Given edge on hex cell find corresponding edge on face. Is either. "];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="Foam::searchablePlateFeatures\l::features",height=0.2,width=0.4,color="black",URL="$a02257.html#a55de90ec15dbc01a8dd70937784836e1",tooltip="Return an extendedFeatureEdgeMesh containing the features. "];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="Foam::meshTools::findEdge",height=0.2,width=0.4,color="black",URL="$a10780.html#ac23b3c803050cb2339b3b256887505a6",tooltip="Return edge between two vertices. Returns -1 if no edge. "];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="Foam::triSurfaceTools\l::getEdge",height=0.2,width=0.4,color="black",URL="$a02689.html#a48231c2376e7ed4f8ce011614fc6a0bf",tooltip="Returns edge label connecting v1, v2 (local numbering) "];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="Foam::cellLooper::getFirst\lVertEdge",height=0.2,width=0.4,color="black",URL="$a00217.html#ae2de4eee75fe8073bc4883358c9c8672",tooltip="Get first edge connected to vertI and on faceI. "];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="Foam::triSurfaceTools\l::getVertexTriangles",height=0.2,width=0.4,color="black",URL="$a02689.html#aa242e3ca747b5d12e431a87f581aebb7",tooltip="Get all triangles using edge endpoint. "];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="Foam::triSurfaceTools\l::getVertexVertices",height=0.2,width=0.4,color="black",URL="$a02689.html#af8c8a35e91aeac5ecf9a34f607d2c035",tooltip="Get all vertices (local numbering) connected to vertices of edge. "];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="Foam::treeDataFace\l::getVolumeType",height=0.2,width=0.4,color="black",URL="$a02670.html#a5221237edf9a875b73dbd139d43292d7",tooltip="Get type (inside,outside,mixed,unknown) of point w.r.t. surface. "];
  Node1 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="Foam::triSurfaceTools\l::greenRefine",height=0.2,width=0.4,color="black",URL="$a02689.html#abfb8b3103f67e2652cfb672525ec5d43",tooltip="Refine edges by splitting to opposite vertex. "];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="Foam::intersectedSurface\l::intersectedSurface",height=0.2,width=0.4,color="black",URL="$a01165.html#a6e95ab0cf81f4521899580c0caaaf6e7",tooltip="Construct from surface and intersection. isFirstSurface is needed. "];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="Foam::cellFeatures\l::isFeaturePoint",height=0.2,width=0.4,color="black",URL="$a00214.html#a0e1817c6e428d30c177e2871368421a9",tooltip="Are two edges connected at feature point? "];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="Foam::edgeCollapser\l::markSmallEdges",height=0.2,width=0.4,color="black",URL="$a00613.html#a085b30c3d0bbfc36a07a88a49f1aca6d",tooltip="Mark (in collapseEdge) any edges to collapse. "];
  Node1 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="Foam::triSurfaceTools\l::maxEdge",height=0.2,width=0.4,color="black",URL="$a02689.html#aedcb2ebabdbe8437654ce1d4ef881e71",tooltip="Returns element in edgeIndices with minimum length. "];
  Node1 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="Foam::triSurfaceTools\l::minEdge",height=0.2,width=0.4,color="black",URL="$a02689.html#ac365a22b30a404441ffa961fefac8348",tooltip="Returns element in edgeIndices with minimum length. "];
  Node1 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="Foam::slidingInterface\l::modifyMotionPoints",height=0.2,width=0.4,color="black",URL="$a02337.html#a4a962b56dd7cf30972c468258fa888e5",tooltip="Modify motion points to comply with the topological change. "];
  Node1 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="Foam::motionSmootherAlgo\l::modifyMotionPoints",height=0.2,width=0.4,color="black",URL="$a01530.html#a97c706cc758ca249755daf56fcbd44b3",tooltip="Apply optional point constraint (2d correction) "];
  Node1 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="Foam::surfaceFeatures\l::nearestSurfEdge",height=0.2,width=0.4,color="black",URL="$a02475.html#ac9d88c671fbfe12e0526038fb054c11d",tooltip="Find nearest surface edge (out of selectedEdges) for. "];
  Node1 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="Foam::triSurfaceTools\l::oppositeEdge",height=0.2,width=0.4,color="black",URL="$a02689.html#a77110343a3072b75b1764650943d31f9",tooltip="Get edge opposite vertex (local numbering) "];
  Node1 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="Foam::triSurfaceTools\l::oppositeVertex",height=0.2,width=0.4,color="black",URL="$a02689.html#ad78556d7d01f6219bb13005e24171127",tooltip="Get vertex (local numbering) opposite edge. "];
  Node1 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="Foam::meshTools::otherEdge",height=0.2,width=0.4,color="red",URL="$a10780.html#ae03c08ba46f970c3b70bfdd6fccdf664",tooltip="Return label of other edge (out of candidates edgeLabels) "];
  Node1 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="Foam::treeDataEdge\l::overlaps",height=0.2,width=0.4,color="black",URL="$a02669.html#aea49f8ea149b750ff5d58a0a194a6526",tooltip="Does (bb of) shape at index overlap bb. "];
  Node1 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="Foam::polyMeshZipUpCells",height=0.2,width=0.4,color="black",URL="$a10725.html#ab957fb2d74d8de84991a6246e876ecd2"];
  Node1 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="Foam::boundaryMesh\l::setFeatureEdges",height=0.2,width=0.4,color="black",URL="$a00151.html#a0e01df03fc2c7dbfd31c0fa36528926a",tooltip="Set featureEdges, edgeToFeature, featureSegments according. "];
  Node1 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="Foam::meshCutAndRemove\l::setRefinement",height=0.2,width=0.4,color="black",URL="$a01460.html#a5b289474e53287a9460c322f12434dec",tooltip="Do actual cutting with cut description. Inserts mesh changes. "];
  Node1 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="Foam::meshCutter::setRefinement",height=0.2,width=0.4,color="red",URL="$a01461.html#ad6964ecaeb84631835d8a4e51bf706bb",tooltip="Do actual cutting with cut description. Inserts mesh changes. "];
  Node1 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="Foam::PatchTools::sorted\lPointEdges",height=0.2,width=0.4,color="black",URL="$a01814.html#ade266c84d472629a66d2ec0f9c8f2ff9"];
  Node1 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="Foam::extendedEdgeMesh\l::sortPointsAndEdges",height=0.2,width=0.4,color="black",URL="$a00700.html#a35042787bb1f37f3e2695d3b48e313b0"];
  Node1 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="Foam::surfaceIntersection\l::surfaceIntersection",height=0.2,width=0.4,color="black",URL="$a02482.html#a0227f78e50cd258d5b10a3f1214bea8f",tooltip="Special: intersect surface with itself. Used to check for. "];
  Node1 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="Foam::boundaryCutter\l::updateMesh",height=0.2,width=0.4,color="black",URL="$a00150.html#ad57565956fd4064299f4bd3c4eebb1d4",tooltip="Force recalculation of locally stored data on topological change. "];
  Node1 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="Foam::meshCutAndRemove\l::updateMesh",height=0.2,width=0.4,color="black",URL="$a01460.html#ad57565956fd4064299f4bd3c4eebb1d4",tooltip="Force recalculation of locally stored data on topological change. "];
  Node1 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="Foam::meshCutter::updateMesh",height=0.2,width=0.4,color="red",URL="$a01461.html#ad57565956fd4064299f4bd3c4eebb1d4",tooltip="Force recalculation of locally stored data on topological change. "];
  Node1 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="Foam::blockMesh::writeTopology",height=0.2,width=0.4,color="black",URL="$a00147.html#ad7d050952a451ec3f620b45f2f7139bf",tooltip="Writes edges of blockMesh in OBJ format. "];
}
