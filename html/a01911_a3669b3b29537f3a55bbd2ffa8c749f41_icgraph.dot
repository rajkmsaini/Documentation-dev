digraph "faces"
{
  bgcolor="transparent";
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="faces",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 [label="Foam::primitiveMeshTools\l::boundaryFaceSkewness",height=0.2,width=0.4,color="red",URL="$a01913.html#adb50ddf90d75ce9d64beafa16e1ccf02",tooltip="Skewness of single boundary face. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 [label="Foam::tetOverlapVolume\l::cellCellOverlapMinDecomp",height=0.2,width=0.4,color="red",URL="$a02500.html#ad7d2fcd3e6fe707b574ad52fecb2b319",tooltip="Return true if olverlap volume is greater than threshold. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node4 [label="Foam::tetOverlapVolume\l::cellCellOverlapVolumeMinDecomp",height=0.2,width=0.4,color="red",URL="$a02500.html#ac07b93de89840367af8c4144a41b064d",tooltip="Calculates the overlap volume. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node5 [label="Foam::primitiveMeshGeometry\l::checkFaceAngles",height=0.2,width=0.4,color="black",URL="$a01912.html#a1e53fa2de621f051c1777b67d71e354c"];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node6 [label="Foam::primitiveMeshGeometry\l::checkFacePyramids",height=0.2,width=0.4,color="black",URL="$a01912.html#ad90dd781f10ef81bbfefbe0b9b8fe46e"];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node7 [label="Foam::primitiveMeshGeometry\l::checkFaceTwist",height=0.2,width=0.4,color="black",URL="$a01912.html#a024a05dbc6d84c1506e13b255ee71518"];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node8 [label="Foam::directionInfo\l::edgeToFaceIndex",height=0.2,width=0.4,color="black",URL="$a00520.html#ae91026257717a2d46454adf53e72da4d",tooltip="Given edge on hex cell find corresponding edge on face. Is either. "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node9 [label="Foam::primitiveMeshTools\l::faceConcavity",height=0.2,width=0.4,color="black",URL="$a01913.html#a10cc791bf86b406e9f23f80b34b8bf8d",tooltip="Generate face concavity field. Returns per face the (sin of the) "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node10 [label="Foam::primitiveMeshTools\l::faceFlatness",height=0.2,width=0.4,color="black",URL="$a01913.html#abb1dae78c8be2af3d2f3fd772c68a73a",tooltip="Generate face flatness field. Compares the individual triangles&#39;. "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node11 [label="Foam::primitiveMeshTools\l::facePyramidVolume",height=0.2,width=0.4,color="black",URL="$a01913.html#aab4eea20bacd77eef1060af3f16adc26",tooltip="Generate face pyramid volume fields. "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node12 [label="Foam::primitiveMeshTools\l::faceSkewness",height=0.2,width=0.4,color="black",URL="$a01913.html#aeb1650fdc60d87717a060209d7526802",tooltip="Skewness of single face. "];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node13 [label="Foam::localPointRegion\l::findDuplicateFaces",height=0.2,width=0.4,color="red",URL="$a01339.html#a6a37b082fe46b394cc065a8dfa76f62c",tooltip="Helper routine to find baffles (two boundary faces using the. "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node14 [label="Foam::surfaceSets::\lgetHangingCells",height=0.2,width=0.4,color="black",URL="$a02426.html#a132f4892a58ea8f9478b78c38c9747d7",tooltip="Get cells using points on &#39;outside&#39; only. "];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node15 [label="Foam::boundaryMesh\l::getNearest",height=0.2,width=0.4,color="black",URL="$a00142.html#afc0c1d142df9fc42e5efffdf1f144d3a",tooltip="Get bMesh index of nearest face for every boundary face in. "];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node16 [label="Foam::interpolatePointToCell",height=0.2,width=0.4,color="black",URL="$a10237.html#a818720045c0fa650b5ec0038ef8cdd46"];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node17 [label="Foam::prismMatcher::isA",height=0.2,width=0.4,color="black",URL="$a01917.html#acd2adf1fc5f522ebdfcfdad416351c14",tooltip="Exact match. Uses faceSizeMatch. "];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node18 [label="Foam::pyrMatcher::isA",height=0.2,width=0.4,color="black",URL="$a01982.html#acd2adf1fc5f522ebdfcfdad416351c14",tooltip="Exact match. Uses faceSizeMatch. "];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node19 [label="Foam::tetMatcher::isA",height=0.2,width=0.4,color="red",URL="$a02499.html#acd2adf1fc5f522ebdfcfdad416351c14",tooltip="Exact match. Uses faceSizeMatch. "];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node20 [label="Foam::tetWedgeMatcher::isA",height=0.2,width=0.4,color="black",URL="$a02503.html#acd2adf1fc5f522ebdfcfdad416351c14",tooltip="Exact match. Uses faceSizeMatch. "];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node21 [label="Foam::wedgeMatcher::isA",height=0.2,width=0.4,color="black",URL="$a02784.html#acd2adf1fc5f522ebdfcfdad416351c14",tooltip="Exact match. Uses faceSizeMatch. "];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node22 [label="Foam::hexMatcher::isA",height=0.2,width=0.4,color="black",URL="$a00979.html#acd2adf1fc5f522ebdfcfdad416351c14",tooltip="Exact match. Uses faceSizeMatch. "];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node23 [label="Foam::degenerateMatcher\l::match",height=0.2,width=0.4,color="black",URL="$a00484.html#a5adc43a57aebf7c5155f18d991cdecf1",tooltip="Recognize shape given mesh and cellI. "];
  Node1 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node24 [label="Foam::prismMatcher\l::matches",height=0.2,width=0.4,color="black",URL="$a01917.html#aaf80614ee28c6bfadb117557442c1bed",tooltip="Like isA but also constructs a cellShape (if shape matches) "];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node25 [label="Foam::tetMatcher::matches",height=0.2,width=0.4,color="black",URL="$a02499.html#aaf80614ee28c6bfadb117557442c1bed",tooltip="Like isA but also constructs a cellShape (if shape matches) "];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node26 [label="Foam::pyrMatcher::matches",height=0.2,width=0.4,color="black",URL="$a01982.html#aaf80614ee28c6bfadb117557442c1bed",tooltip="Like isA but also constructs a cellShape (if shape matches) "];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node27 [label="Foam::wedgeMatcher\l::matches",height=0.2,width=0.4,color="black",URL="$a02784.html#aaf80614ee28c6bfadb117557442c1bed",tooltip="Like isA but also constructs a cellShape (if shape matches) "];
  Node1 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node28 [label="Foam::tetWedgeMatcher\l::matches",height=0.2,width=0.4,color="black",URL="$a02503.html#aaf80614ee28c6bfadb117557442c1bed",tooltip="Like isA but also constructs a cellShape (if shape matches) "];
  Node1 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node29 [label="Foam::hexMatcher::matches",height=0.2,width=0.4,color="black",URL="$a00979.html#aaf80614ee28c6bfadb117557442c1bed",tooltip="Like isA but also constructs a cellShape (if shape matches) "];
  Node1 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node30 [label="Foam::treeDataFace\l::findNearestOp::operator()",height=0.2,width=0.4,color="black",URL="$a00787.html#a729f81361ac2cf97bbda7e0282e7e8cb"];
  Node1 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node31 [label="Foam::treeDataFace\l::findIntersectOp::operator()",height=0.2,width=0.4,color="black",URL="$a00783.html#a43d47b209c41bbb1717f33bc766cd2c0",tooltip="Calculate intersection of triangle with ray. Sets result. "];
  Node1 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node32 [label="pointFaces",height=0.2,width=0.4,color="red",URL="$a01911.html#a758f775d09e1be4cdd80daea4e402f55"];
}
