digraph "begin"
{
  bgcolor="transparent";
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="begin",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 [label="Foam::lduMatrix::Amul",height=0.2,width=0.4,color="black",URL="$a01245.html#a356332b0cbbd88cc1f4450fe79acc678",tooltip="Matrix multiplication with updated interfaces. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 [label="Foam::UPtrList::begin",height=0.2,width=0.4,color="black",URL="$a02692.html#a169ad4153b300672ec298a08076e707b",tooltip="Return an iterator to begin traversing the UPtrList. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node4 [label="Foam::PtrList::begin",height=0.2,width=0.4,color="black",URL="$a01975.html#a96855853d384370c7e789b6b8e041af7",tooltip="Return an iterator to begin traversing the PtrList. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node5 [label="Foam::TDILUPreconditioner\l::calcInvD",height=0.2,width=0.4,color="black",URL="$a02488.html#a4285bbd6c558576051d236d84b20d26d",tooltip="Calculate the reciprocal of the preconditioned diagonal. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node6 [label="Foam::DILUPreconditioner\l::calcReciprocalD",height=0.2,width=0.4,color="black",URL="$a00508.html#a0e2f579bbf250828b4e3f250dbadf455",tooltip="Calculate the reciprocal of the preconditioned diagonal. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node7 [label="Foam::DICPreconditioner\l::calcReciprocalD",height=0.2,width=0.4,color="black",URL="$a00499.html#a0e2f579bbf250828b4e3f250dbadf455",tooltip="Calculate the reciprocal of the preconditioned diagonal. "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node8 [label="Foam::mapDistribute\l::compact",height=0.2,width=0.4,color="black",URL="$a01363.html#ae425c08cfe8d1064cfa183af3b1fdfe4",tooltip="Compact maps. Gets per field a bool whether it is used (locally) "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node9 [label="Foam::processorLduInterface\l::compressedReceive",height=0.2,width=0.4,color="black",URL="$a01933.html#a0bc1603d9a4872cb6a751d1ec71fae5d",tooltip="Raw field receive function with data compression. "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node10 [label="Foam::processorLduInterface\l::compressedSend",height=0.2,width=0.4,color="black",URL="$a01933.html#a5eb41b6f93a8a53e326050f56598c9b8",tooltip="Raw field send function with data compression. "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node11 [label="Foam::triSurfaceTools\l::delaunay2D",height=0.2,width=0.4,color="black",URL="$a02617.html#afd133ce6c8aa4cd545126660df20989b",tooltip="Do unconstrained Delaunay of points. Returns triSurface with 3D. "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node12 [label="Foam::mapDistribute\l::distribute",height=0.2,width=0.4,color="red",URL="$a01363.html#a33e0f8481eb68bf011731ec98e8f7c65",tooltip="Distribute data. Note:schedule only used for Pstream::scheduled. "];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node13 [label="Foam::globalIndex::\lgather",height=0.2,width=0.4,color="red",URL="$a00906.html#a2ada785f9c593e27b85617451b04b393",tooltip="Collect data in processor order on master (== procIDs[0]). "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node14 [label="Foam::Pstream::gatherList",height=0.2,width=0.4,color="red",URL="$a01959.html#afbdf64fb42cd760690d51a9a321792d9",tooltip="Gather data but keep individual values separate. "];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node15 [label="Foam::lduMatrix::H",height=0.2,width=0.4,color="black",URL="$a01245.html#a696121529e9157344b406f77234f75eb"];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node16 [label="Foam::lduMatrix::H1",height=0.2,width=0.4,color="red",URL="$a01245.html#a699ea4dd1f400188713b5b01c9214ada"];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node17 [label="Foam::Pstream::listCombine\lGather",height=0.2,width=0.4,color="red",URL="$a01959.html#a8c0e5044dc4a942cf62b06797c3a743f"];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node18 [label="Foam::Pstream::listCombine\lScatter",height=0.2,width=0.4,color="red",URL="$a01959.html#adfd4915b68ab7181dccb847976286e56",tooltip="Scatter data. Reverse of combineGather. "];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node19 [label="operator\<",height=0.2,width=0.4,color="black",URL="$a02659.html#a122cf4fdb56b77fd4fbc8e666117bc41",tooltip="Compare two ULists lexicographically. Takes linear time. "];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node20 [label="Foam::noPreconditioner\l::precondition",height=0.2,width=0.4,color="red",URL="$a01592.html#a365a52f60a6c9be0a4775e814d50c2c7",tooltip="Return wA the preconditioned form of residual rA. "];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node21 [label="Foam::DICPreconditioner\l::precondition",height=0.2,width=0.4,color="black",URL="$a00499.html#a365a52f60a6c9be0a4775e814d50c2c7",tooltip="Return wA the preconditioned form of residual rA. "];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node22 [label="Foam::DILUPreconditioner\l::precondition",height=0.2,width=0.4,color="black",URL="$a00508.html#a365a52f60a6c9be0a4775e814d50c2c7",tooltip="Return wA the preconditioned form of residual rA. "];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node23 [label="Foam::diagonalPreconditioner\l::precondition",height=0.2,width=0.4,color="red",URL="$a00492.html#a365a52f60a6c9be0a4775e814d50c2c7",tooltip="Return wA the preconditioned form of residual rA. "];
  Node1 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node24 [label="Foam::FDICPreconditioner\l::precondition",height=0.2,width=0.4,color="black",URL="$a00727.html#a365a52f60a6c9be0a4775e814d50c2c7",tooltip="Return wA the preconditioned form of residual rA. "];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node25 [label="Foam::DILUPreconditioner\l::preconditionT",height=0.2,width=0.4,color="black",URL="$a00508.html#a0ee9de4840f691f2b58d06fc41b080d6",tooltip="Return wT the transpose-matrix preconditioned form of residual rT. "];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node26 [label="Foam::ITstream::print",height=0.2,width=0.4,color="black",URL="$a01178.html#a396408e517abe1f8cae9d2844a18ad1e",tooltip="Print description of IOstream to Ostream. "];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node27 [label="Foam::processorLduInterface\l::receive",height=0.2,width=0.4,color="black",URL="$a01933.html#ad5969b683a3fed3932e6775ab24b9e9e",tooltip="Raw field receive function. "];
  Node1 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node28 [label="Foam::lduMatrix::residual",height=0.2,width=0.4,color="red",URL="$a01245.html#a993f699d9efc5bc6a82b0c8b6e86c78a"];
  Node1 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node29 [label="Foam::globalIndex::\lscatter",height=0.2,width=0.4,color="red",URL="$a00906.html#a2e964657608ecbc2154a0e8e2e28b815",tooltip="Distribute data in processor order. Requires fld to be sized! "];
  Node1 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node30 [label="Foam::processorLduInterface\l::send",height=0.2,width=0.4,color="black",URL="$a01933.html#abdbcd3bab2fee80ded71d5bd2eaa5727",tooltip="Raw send function. "];
  Node1 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node31 [label="Foam::shuffle",height=0.2,width=0.4,color="red",URL="$a10237.html#a0f84bd476a584bf7d31e827eafd75a3d"];
  Node1 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node32 [label="Foam::GaussSeidelSmoother\l::smooth",height=0.2,width=0.4,color="black",URL="$a00882.html#a8622cba882900a35ce041c544a6134c0",tooltip="Smooth for the given number of sweeps. "];
  Node1 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node33 [label="Foam::symGaussSeidelSmoother\l::smooth",height=0.2,width=0.4,color="black",URL="$a02453.html#a8622cba882900a35ce041c544a6134c0",tooltip="Smooth for the given number of sweeps. "];
  Node1 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node34 [label="Foam::TGaussSeidelSmoother\l::smooth",height=0.2,width=0.4,color="black",URL="$a02504.html#a2727a700fb0cafd8fb6b7e04f558fca7",tooltip="Smooth for the given number of sweeps. "];
  Node1 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node35 [label="Foam::DILUSmoother\l::smooth",height=0.2,width=0.4,color="black",URL="$a00509.html#add1d7a70b695e21e3677e07a4805a97a",tooltip="Smooth the solution for a given number of sweeps. "];
  Node1 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node36 [label="Foam::DICSmoother::\lsmooth",height=0.2,width=0.4,color="black",URL="$a00500.html#add1d7a70b695e21e3677e07a4805a97a",tooltip="Smooth the solution for a given number of sweeps. "];
  Node1 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node37 [label="Foam::FDICSmoother\l::smooth",height=0.2,width=0.4,color="black",URL="$a00728.html#add1d7a70b695e21e3677e07a4805a97a",tooltip="Smooth the solution for a given number of sweeps. "];
  Node1 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node38 [label="Foam::nonBlockingGaussSeidel\lSmoother::smooth",height=0.2,width=0.4,color="black",URL="$a01568.html#a84def9b216d3c88d8c9d2e410aa7ff04",tooltip="Smooth for the given number of sweeps. "];
  Node1 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node39 [label="Foam::PBiCCCG::solve",height=0.2,width=0.4,color="black",URL="$a01767.html#a6020d3a68339ab1a050e90633b70ca5a",tooltip="Solve the matrix with this solver. "];
  Node1 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node40 [label="Foam::PBiCICG::solve",height=0.2,width=0.4,color="black",URL="$a01769.html#a6020d3a68339ab1a050e90633b70ca5a",tooltip="Solve the matrix with this solver. "];
  Node1 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 [label="Foam::PCICG::solve",height=0.2,width=0.4,color="black",URL="$a01771.html#a6020d3a68339ab1a050e90633b70ca5a",tooltip="Solve the matrix with this solver. "];
  Node1 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node42 [label="Foam::PBiCG::solve",height=0.2,width=0.4,color="black",URL="$a01768.html#a67060ce780f6992862e39b0d82c37aa0",tooltip="Solve the matrix with this solver. "];
  Node1 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node43 [label="Foam::PCG::solve",height=0.2,width=0.4,color="black",URL="$a01770.html#a67060ce780f6992862e39b0d82c37aa0",tooltip="Solve the matrix with this solver. "];
  Node1 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node44 [label="Foam::sort",height=0.2,width=0.4,color="red",URL="$a10237.html#a8040176c5570405aa954090217c37fbe"];
  Node1 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node45 [label="Foam::stableSort",height=0.2,width=0.4,color="red",URL="$a10237.html#ac70ba9dd7bbc030636a4a4e2e9825c3c"];
  Node1 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node46 [label="Foam::lduMatrix::sumA",height=0.2,width=0.4,color="black",URL="$a01245.html#a1ee2ed3984be5768ec28254acb84a35d",tooltip="Sum the coefficients on each row of the matrix. "];
  Node1 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node47 [label="Foam::TGaussSeidelSmoother\l::TGaussSeidelSmoother",height=0.2,width=0.4,color="black",URL="$a02504.html#a37d1e9ced3ff8cc76ec3c4855784cc83",tooltip="Construct from components. "];
  Node1 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node48 [label="Foam::lduMatrix::Tmul",height=0.2,width=0.4,color="black",URL="$a01245.html#a2600584c14747e45b037baf3a3c730a8",tooltip="Matrix transpose multiplication with updated interfaces. "];
  Node1 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node49 [label="Foam::fft::transform",height=0.2,width=0.4,color="black",URL="$a00732.html#a2edcd80a7fcc830ff6ed969b368f7adb"];
  Node1 -> Node50 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node50 [label="Foam::ensightBinaryStream\l::write",height=0.2,width=0.4,color="black",URL="$a00621.html#a116a287048e19be308c95846ad845c59"];
}
