digraph "surface"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="surface",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Foam::edgeIntersections\l::edgeIntersections",height=0.2,width=0.4,color="black",URL="$a00621.html#afa99c1043e2be47721e4e7012472c2bb",tooltip="Construct from surface and tolerance. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="Foam::edgeIntersections\l::removeDegenerates",height=0.2,width=0.4,color="red",URL="$a00621.html#ad0d81f63bedf7adf479d3512ac49ae21",tooltip="Resolve ties. Shuffles points so all edge - face intersections. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="Foam::surfaceIntersection\l::surfaceIntersection",height=0.2,width=0.4,color="black",URL="$a02571.html#a799b50167148bd08cc2271a5b90891ff",tooltip="Construct from two surfaces. Does all its own cutting. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="tree",height=0.2,width=0.4,color="red",URL="$a02782.html#aae4907f8216f4c6460830b79104a919c",tooltip="Demand driven construction of the octree. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="Foam::triSurfaceRegionSearch\l::treeByRegion",height=0.2,width=0.4,color="red",URL="$a02781.html#ac02de27ce5f8e8275ab114f72875c760",tooltip="Demand driven construction of octree for each region. "];
}
