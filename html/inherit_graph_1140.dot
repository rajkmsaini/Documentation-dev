digraph "Graphical Class Hierarchy"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="string",height=0.2,width=0.4,color="grey75"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="string",height=0.2,width=0.4,color="black",URL="$a02543.html",tooltip="A class for handling character strings derived from std::string. "];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="fileName",height=0.2,width=0.4,color="black",URL="$a00792.html",tooltip="A class for handling file names. "];
  Node2 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="word",height=0.2,width=0.4,color="black",URL="$a02985.html",tooltip="A class for handling words, derived from string. "];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="keyType",height=0.2,width=0.4,color="black",URL="$a01258.html",tooltip="A class for handling keywords in dictionaries. "];
  Node4 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="wordRe",height=0.2,width=0.4,color="black",URL="$a02986.html",tooltip="A wordRe is a word, but can also have a regular expression for matching words. "];
}
