digraph "token"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="token",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" stringTokenPtr_" ,fontname="Helvetica"];
  Node2 [label="string",height=0.2,width=0.4,color="red",URL="$a29557.html",tooltip="A class for handling character strings derived from std::string. "];
  Node2 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" null" ,fontname="Helvetica"];
  Node1 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" undefinedToken" ,fontname="Helvetica"];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" compoundTokenPtr_" ,fontname="Helvetica"];
  Node4 [label="compound",height=0.2,width=0.4,color="red",URL="$a27417.html",tooltip="Abstract base class for complex tokens. "];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" wordTokenPtr_" ,fontname="Helvetica"];
  Node6 [label="word",height=0.2,width=0.4,color="black",URL="$a29565.html",tooltip="A class for handling words, derived from string. "];
  Node2 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" null" ,fontname="Helvetica"];
}
