digraph "mergePoints"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="mergePoints",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Foam::mapDistributeBase\l::constructSize",height=0.2,width=0.4,color="black",URL="$a01436.html#a31e35cc37553bf187f244f12f1ad9c37",tooltip="Constructed data size. "];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="coupledPatch",height=0.2,width=0.4,color="red",URL="$a00945.html#afbcae5ee9ab7ebe172d3809f611d745d",tooltip="Return patch of all coupled faces. "];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="Foam::mapDistribute\l::distribute",height=0.2,width=0.4,color="black",URL="$a01435.html#aaa12ce6cf9cbdd9dfb0015d8c93d1214",tooltip="Distribute data using default commsType. "];
  Node1 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="Foam::HashTableCore::end",height=0.2,width=0.4,color="red",URL="$a00998.html#a540580a296c0ff351686ceb4f27b6fe6",tooltip="iteratorEnd set to beyond the end of any HashTable "];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="Foam::HashTable::find",height=0.2,width=0.4,color="black",URL="$a00997.html#a76b2c74ebd9f33fa9f76261b027ffc11",tooltip="Find and return an iterator set at the hashedEntry. "];
  Node1 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="globalCoPointSlaves",height=0.2,width=0.4,color="black",URL="$a00945.html#a1fcda682b7be60ff6140dbc752924d7c"];
  Node1 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="globalCoPointSlavesMap",height=0.2,width=0.4,color="red",URL="$a00945.html#ab52285621ca75e00b03f68a0a65c16bc"];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Foam::PrimitivePatch\l::meshPointMap",height=0.2,width=0.4,color="red",URL="$a02019.html#a031f186dcdd6bca2af97413a6e3301aa",tooltip="Mesh point map. Given the global point index find its. "];
  Node1 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="Foam::PrimitivePatch\l::nPoints",height=0.2,width=0.4,color="black",URL="$a02019.html#a9927abeba2c8506177084d644b6e573a",tooltip="Return number of points supporting patch faces. "];
  Node1 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="Foam::mapDistribute\l::reverseDistribute",height=0.2,width=0.4,color="red",URL="$a01435.html#ae5978ec7d5cfaaa710d2266027280062",tooltip="Reverse distribute data using default commsType. "];
  Node1 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="Foam::List::setSize",height=0.2,width=0.4,color="red",URL="$a01395.html#aedb985ffeaf1bdbfeccc2a8730405703",tooltip="Reset size of List. "];
  Node1 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="Foam::List::size",height=0.2,width=0.4,color="black",URL="$a01395.html#a8a5f6fa29bd4b500caf186f60245b384",tooltip="Override size to be inconsistent with allocated storage. "];
  Node1 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="syncData",height=0.2,width=0.4,color="black",URL="$a00945.html#a81fffc5ec4bfe50dd3ba0a3ca38ee2f1",tooltip="Helper: synchronise data with transforms. "];
  Node14 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
