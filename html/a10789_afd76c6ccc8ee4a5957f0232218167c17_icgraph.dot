digraph "writeOBJ"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="writeOBJ",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Foam::mappedPatchBase\l::calcAMI",height=0.2,width=0.4,color="red",URL="$a01421.html#afa9ee1ee09345abf9d30d18090559e42",tooltip="Calculate AMI interpolator. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="Foam::polyDualMesh\l::calcFeatures",height=0.2,width=0.4,color="red",URL="$a01913.html#a9462253b504fad04ae7194f1f17469c8",tooltip="Helper function to create feature edges and points based on. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="Foam::processorPolyPatch\l::calcGeometry",height=0.2,width=0.4,color="red",URL="$a01996.html#a58bb4c0382e9ee570811fb3f005a0a97",tooltip="Calculate the patch geometry. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="Foam::mappedPatchBase\l::calcMapping",height=0.2,width=0.4,color="red",URL="$a01421.html#a855421729b0363f1d9b0341a153f12b1",tooltip="Calculate mapping. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="Foam::cyclicPolyPatch\l::calcTransforms",height=0.2,width=0.4,color="black",URL="$a00484.html#afb48497736bbafb1fbb000cd218d1779",tooltip="Recalculate the transformation tensors. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="Foam::triSurface::checkEdges",height=0.2,width=0.4,color="red",URL="$a02683.html#a90f5f9407a227d55df8fa9120de9f122",tooltip="Check triply (or more) connected edges. "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="Foam::hexCellLooper::cut",height=0.2,width=0.4,color="red",URL="$a01007.html#a57a0014495f8049ba5a41bc5fba01230",tooltip="Create cut along circumference of cellI. Gets current mesh cuts. "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Foam::meshRefinement\l::dumpIntersections",height=0.2,width=0.4,color="red",URL="$a01470.html#ab2d69c1618ec1b44a6aaa48e20b7ed16",tooltip="Debug: Write intersection information to OBJ format. "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="Foam::edgeSurface::\ledgeSurface",height=0.2,width=0.4,color="black",URL="$a00620.html#abe6268d682c2dab294acf2175f47ca38",tooltip="Construct from surface and intersection description. "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="Foam::processorPolyPatch\l::initOrder",height=0.2,width=0.4,color="red",URL="$a01996.html#aa56a1502e7574a1aa6661f68491bcb3c",tooltip="Initialize ordering for primitivePatch. Does not. "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="Foam::NamedEnum::names",height=0.2,width=0.4,color="red",URL="$a01569.html#a7350da3a0edd92cd11e6c479c9967dc8"];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="Foam::surfaceFeatures\l::nearestEdges",height=0.2,width=0.4,color="red",URL="$a02478.html#ad0730de914a7db6da70faf38494a489d",tooltip="Like nearestSamples but now gets nearest point on. "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="Foam::surfaceFeatures\l::nearestSamples",height=0.2,width=0.4,color="red",URL="$a02478.html#a05b6a62c91ca3d68db42ba635ff1f307",tooltip="Find nearest sample for selected surface points. "];
  Node14 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="Foam::surfaceFeatures\l::writeObj",height=0.2,width=0.4,color="red",URL="$a02478.html#af78e21d23a56aa4355af14059f2b2770",tooltip="Write to separate OBJ files (region, external, internal edges,. "];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="Foam::cellCuts::nonAnchor\lPoints",height=0.2,width=0.4,color="red",URL="$a00212.html#a8787009bd3255baa9c0480bbe3df17e3",tooltip="Invert anchor point selection. "];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="normEdgeVec",height=0.2,width=0.4,color="red",URL="$a10789.html#a7fcaaaefc5bc2d460742d9a452091d8b",tooltip="Normalized edge vector. "];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="Foam::ifEqEqOp::operator()",height=0.2,width=0.4,color="black",URL="$a01030.html#a71918488bb9f8251fb7d05ed3baeb14f"];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="Foam::nearestEqOp::\loperator()",height=0.2,width=0.4,color="black",URL="$a01576.html#aca31c134b06f127a240af78f11932306"];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="Foam::oldCyclicPolyPatch\l::order",height=0.2,width=0.4,color="red",URL="$a01706.html#a557fadfc4a0e74703deefb12da057df5",tooltip="Return new ordering for primitivePatch. "];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="Foam::processorPolyPatch\l::order",height=0.2,width=0.4,color="red",URL="$a01996.html#a557fadfc4a0e74703deefb12da057df5",tooltip="Return new ordering for primitivePatch. "];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="Foam::cyclicPolyPatch\l::order",height=0.2,width=0.4,color="red",URL="$a00484.html#a557fadfc4a0e74703deefb12da057df5",tooltip="Return new ordering for primitivePatch. "];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="Foam::dynamicIndexedOctree\l::print",height=0.2,width=0.4,color="red",URL="$a00599.html#af37344bf48f19f8647db8555d3046c66",tooltip="Print tree. Either print all indices (printContent = true) or. "];
  Node1 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="Foam::cyclicAMIPolyPatch\l::resetAMI",height=0.2,width=0.4,color="red",URL="$a00474.html#ac378774325ececbf6413adfeeaa2a68f",tooltip="Reset the AMI interpolator. "];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="Foam::motionSmootherAlgo\l::setDisplacementPatchFields",height=0.2,width=0.4,color="red",URL="$a01532.html#a1117a26b03c2fa65a7065fe94f32757c",tooltip="Set patch fields on displacement to be consistent with. "];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="Foam::duplicatePoints\l::setRefinement",height=0.2,width=0.4,color="red",URL="$a00591.html#a159a54964aa4001ff24e9fb05834750a",tooltip="Play commands into polyTopoChange to duplicate points. Gets. "];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="Foam::refinementIterator\l::setRefinement",height=0.2,width=0.4,color="red",URL="$a02115.html#afd8b2c75ae43c5073eece728f11ed02a",tooltip="Try to refine cells in given direction. Constructs intermediate. "];
  Node1 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="Foam::faceCollapser\l::setRefinement",height=0.2,width=0.4,color="red",URL="$a00721.html#a59a6ebacbd6a1a48f22424f5a8f81195",tooltip="Collapse faces along endpoints. Play commands into. "];
  Node1 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="Foam::removeFaces::\lsetRefinement",height=0.2,width=0.4,color="red",URL="$a02159.html#ab93e03b88d5ddae1a2a9b101a73f01e6",tooltip="Play commands into polyTopoChange to remove faces. "];
  Node1 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="Foam::hexRef8::setRefinement",height=0.2,width=0.4,color="red",URL="$a01009.html#a59cb8a999be096950b6cc4f7c457426b",tooltip="Insert refinement. All selected cells will be split into 8. "];
  Node1 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="Foam::wallBoundedParticle\l::wallBoundedParticle",height=0.2,width=0.4,color="black",URL="$a02828.html#a92bfc8a64e34d6144b1549bc7ddf4062",tooltip="Construct copy. "];
  Node1 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="Foam::AMIInterpolation\l::wordTointerpolationMethod",height=0.2,width=0.4,color="red",URL="$a00048.html#a60e3ed16ffdfe716b129e1e10820c506",tooltip="Convert word to interpolationMethod. "];
  Node1 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="Foam::cellCuts::writeCellOBJ",height=0.2,width=0.4,color="red",URL="$a00212.html#a5d10e5abd6982fceb95964d816f0c7c7",tooltip="debugging:Write edges of cell and loop "];
  Node1 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="Foam::AMIInterpolation\l::writeFaceConnectivity",height=0.2,width=0.4,color="red",URL="$a00048.html#a0397f855e069473e0da8d3481ee61a86",tooltip="Write face connectivity as OBJ file. "];
  Node1 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="Foam::AMIMethod::writeIntersectionOBJ",height=0.2,width=0.4,color="red",URL="$a00049.html#a1ae14866bd543ac18f109442e6ffe9c1",tooltip="Write triangle intersection to OBJ file. "];
  Node1 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="writeOBJ",height=0.2,width=0.4,color="black",URL="$a10789.html#a5b5e1fa52da2d2391b5e13b3ae46faa1",tooltip="Write obj representation of a triad. Requires the location of the. "];
  Node1 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="Foam::coupledPolyPatch\l::writeOBJ",height=0.2,width=0.4,color="black",URL="$a00422.html#aced11bcde5699e7ec29ee979246e8de1",tooltip="Write selected points in OBJ format. "];
  Node1 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="Foam::enrichedPatch\l::writeOBJ",height=0.2,width=0.4,color="red",URL="$a00640.html#a7939345a703cca7927d4b8a06d40c6a7",tooltip="Debugging: dump graphical representation to obj format file. "];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="Foam::cellCuts::writeOBJ",height=0.2,width=0.4,color="black",URL="$a00212.html#a62e83326ed50c35a499ea761d88838be",tooltip="debugging:Write all of cuts to stream in OBJ format "];
}
